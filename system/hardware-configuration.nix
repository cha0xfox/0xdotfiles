# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "nvme" "usb_storage" "usbhid" "sd_mod" ];
  boot.initrd.kernelModules = [ "dm-snapshot" ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/b09ad955-d91e-439b-b6ad-eee2f63a3ee4";
      fsType = "xfs";
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/6DC5-B058";
      fsType = "vfat";
    };

  fileSystems."/home" =
    { device = "/dev/disk/by-uuid/1b47dd02-dfd9-4825-8b0b-274b70e57f2f";
      fsType = "xfs";
    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/1b21ab1b-c20b-46cd-b8fc-a280d649604e"; }
    ];

  fileSystems."/DATA_2" =
    { device = "/dev/disk/by-uuid/3337cd64-2591-4455-9a21-5e2adcb13092";
     fsType = "xfs";
    };

  fileSystems."/DATA_1" =
    { device = "/dev/disk/by-uuid/69d3e7a0-fecf-4406-b9dd-a67b41b48ab3";
     fsType = "xfs";
    };

  fileSystems."/DATA_M2" =
    { device = "/dev/disk/by-uuid/d846ca03-2098-49b9-b4de-21141aafe000";
      fsType = "xfs";
    };

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp4s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp5s0.useDHCP = lib.mkDefault true;

  powerManagement.cpuFreqGovernor = lib.mkDefault "performance";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
